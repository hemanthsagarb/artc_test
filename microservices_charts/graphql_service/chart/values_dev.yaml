replicaCount: 1

image:
  repository: graphql-service
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::438954004210:role/terraform-20210305040640742300000002
  name: "graphql-service"

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  nodePort: null

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
  - host: graphql-artc-dev.optimalreality.com.au
    paths:
    - path: /
  tls: []

resources: 
  limits:
    cpu: 4000m
    memory: 12288Mi
  requests:
    cpu: 1000m
    memory: 4096Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

optimalReality:
  logLevel: INFO

experimentManager:
  adminUsername: admin
  adminUserSecret: 
  adminPassword: 
  masterJWT: 

postgresql:
  database: or_dot
  endpoint: artc-dev.ckoda85kvzl3.ap-southeast-2.rds.amazonaws.com:5432
  password: postgres
  username: oradmin

postgresqlSimulation:
  database: ordb
  endpoint: artc-dev.ckoda85kvzl3.ap-southeast-2.rds.amazonaws.com:5432
  password: postgres
  username: postgres

redis:
  endpoint: redis:6379

tpoc:
  aws_access_key_id:
  aws_secret_access_key:
  aws_region: 